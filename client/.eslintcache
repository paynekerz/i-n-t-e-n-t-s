[{"C:\\Users\\stong\\bootcamp\\projects\\i-n-t-e-n-t-s\\client\\src\\index.js":"1","C:\\Users\\stong\\bootcamp\\projects\\i-n-t-e-n-t-s\\client\\src\\reportWebVitals.js":"2","C:\\Users\\stong\\bootcamp\\projects\\i-n-t-e-n-t-s\\client\\src\\App.js":"3","C:\\Users\\stong\\bootcamp\\projects\\i-n-t-e-n-t-s\\client\\src\\utils\\auth.js":"4","C:\\Users\\stong\\bootcamp\\projects\\i-n-t-e-n-t-s\\client\\src\\pages\\Login.js":"5","C:\\Users\\stong\\bootcamp\\projects\\i-n-t-e-n-t-s\\client\\src\\pages\\Signup.js":"6","C:\\Users\\stong\\bootcamp\\projects\\i-n-t-e-n-t-s\\client\\src\\pages\\Backplate.js":"7","C:\\Users\\stong\\bootcamp\\projects\\i-n-t-e-n-t-s\\client\\src\\utils\\mutations.js":"8","C:\\Users\\stong\\bootcamp\\projects\\i-n-t-e-n-t-s\\client\\src\\pages\\Home.js":"9","C:\\Users\\stong\\bootcamp\\projects\\i-n-t-e-n-t-s\\client\\src\\pages\\Search.js":"10","C:\\Users\\stong\\bootcamp\\projects\\i-n-t-e-n-t-s\\client\\src\\pages\\Blogs.js":"11","C:\\Users\\stong\\bootcamp\\projects\\i-n-t-e-n-t-s\\client\\src\\pages\\SingleThought.js":"12","C:\\Users\\stong\\bootcamp\\projects\\i-n-t-e-n-t-s\\client\\src\\components\\Header\\index.js":"13","C:\\Users\\stong\\bootcamp\\projects\\i-n-t-e-n-t-s\\client\\src\\components\\Footer\\index.js":"14","C:\\Users\\stong\\bootcamp\\projects\\i-n-t-e-n-t-s\\client\\src\\utils\\queries.js":"15","C:\\Users\\stong\\bootcamp\\projects\\i-n-t-e-n-t-s\\client\\src\\components\\CommentList\\index.js":"16","C:\\Users\\stong\\bootcamp\\projects\\i-n-t-e-n-t-s\\client\\src\\components\\CommentForm\\index.js":"17","C:\\Users\\stong\\bootcamp\\projects\\i-n-t-e-n-t-s\\client\\src\\components\\ThoughtForm\\index.js":"18","C:\\Users\\stong\\bootcamp\\projects\\i-n-t-e-n-t-s\\client\\src\\components\\ThoughtList\\index.js":"19"},{"size":500,"mtime":1629489447224,"results":"20","hashOfConfig":"21"},{"size":362,"mtime":1629489447229,"results":"22","hashOfConfig":"21"},{"size":2110,"mtime":1629489447086,"results":"23","hashOfConfig":"21"},{"size":1043,"mtime":1629489447230,"results":"24","hashOfConfig":"21"},{"size":2533,"mtime":1629489447226,"results":"25","hashOfConfig":"21"},{"size":2652,"mtime":1629489447227,"results":"26","hashOfConfig":"21"},{"size":2104,"mtime":1629489447224,"results":"27","hashOfConfig":"21"},{"size":2252,"mtime":1629489447230,"results":"28","hashOfConfig":"21"},{"size":699,"mtime":1629489447225,"results":"29","hashOfConfig":"21"},{"size":4497,"mtime":1629489447226,"results":"30","hashOfConfig":"21"},{"size":1004,"mtime":1629489447225,"results":"31","hashOfConfig":"21"},{"size":1159,"mtime":1629489447227,"results":"32","hashOfConfig":"21"},{"size":950,"mtime":1629490406544,"results":"33","hashOfConfig":"21"},{"size":605,"mtime":1629489447220,"results":"34","hashOfConfig":"21"},{"size":687,"mtime":1629489447231,"results":"35","hashOfConfig":"21"},{"size":910,"mtime":1629489447219,"results":"36","hashOfConfig":"21"},{"size":2399,"mtime":1629489447218,"results":"37","hashOfConfig":"21"},{"size":2789,"mtime":1629489447222,"results":"38","hashOfConfig":"21"},{"size":1009,"mtime":1629489447223,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"1i5ftqn",{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"42"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"42"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"42"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"42"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"42"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"42"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"C:\\Users\\stong\\bootcamp\\projects\\i-n-t-e-n-t-s\\client\\src\\index.js",[],["86","87"],"C:\\Users\\stong\\bootcamp\\projects\\i-n-t-e-n-t-s\\client\\src\\reportWebVitals.js",[],"C:\\Users\\stong\\bootcamp\\projects\\i-n-t-e-n-t-s\\client\\src\\App.js",["88","89","90"],"import React from \"react\";\nimport \"./index.css\";\n\nimport styled, { css } from \"styled-components\";\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  createHttpLink,\n} from \"@apollo/client\";\nimport { setContext } from \"@apollo/client/link/context\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  Switch,\n} from \"react-router-dom\";\nimport Auth from \"./utils/auth\";\n// import Background from  \"./components/Background\"\nimport Backplate from \"./pages/Backplate\";\nimport Signup from \"./pages/Signup\";\nimport Login from \"./pages/Login\";\n// import Home from \"./pages/Home\";\n// import Search from \"./pages/Search\";\n// import Blogs from \"./pages/Blogs\";\n\n// Construct our main GraphQL API endpoint\nconst httpLink = createHttpLink({\n  uri: \"/graphql\",\n});\n\n// Construct request middleware that will attach the JWT token to every request as an `authorization` header\nconst authLink = setContext((_, { headers }) => {\n  // get the authentication token from local storage if it exists\n  const token = localStorage.getItem(\"id_token\");\n  // return the headers to the context so httpLink can read them\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : \"\",\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  // Set up our client to execute the `authLink` middleware prior to making the request to our GraphQL API\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      {/* <Background/> */}\n      <Router>\n        <div class=\"wrapper\">\n          <div className=\"content\">\n            <Route\n              path=\"/login\"\n              render={() => (Auth.loggedIn() ? <Redirect to=\"/\" /> : <Login />)}\n            />\n\n            <Route\n              path=\"/\"\n              render={() =>\n                Auth.loggedIn() ? <Backplate /> : <Redirect to=\"/login\" />\n              }\n            />\n\n            <Route path=\"/signup\">\n              <Signup />\n            </Route>\n          </div>\n        </div>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","C:\\Users\\stong\\bootcamp\\projects\\i-n-t-e-n-t-s\\client\\src\\utils\\auth.js",[],"C:\\Users\\stong\\bootcamp\\projects\\i-n-t-e-n-t-s\\client\\src\\pages\\Login.js",[],"C:\\Users\\stong\\bootcamp\\projects\\i-n-t-e-n-t-s\\client\\src\\pages\\Signup.js",[],"C:\\Users\\stong\\bootcamp\\projects\\i-n-t-e-n-t-s\\client\\src\\pages\\Backplate.js",["91","92","93","94","95","96"],"import React from \"react\";\nimport styled, { css } from \"styled-components\";\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  createHttpLink,\n} from \"@apollo/client\";\nimport { setContext } from \"@apollo/client/link/context\";\nimport { BrowserRouter as Router, Route, Redirect, Switch } from \"react-router-dom\";\nimport Auth from \"../utils/auth\";\n\nimport Header from \"../components/Header\";\nimport Home from \"./Home\";\nimport Search from \"./Search\";\nimport Blogs from \"./Blogs\";\nimport SingleThought from \"./SingleThought\";\nimport Footer from \"../components/Footer\";\n\n\n// Construct our main GraphQL API endpoint\nconst httpLink = createHttpLink({\n    uri: \"/graphql\",\n  });\n  \n  // Construct request middleware that will attach the JWT token to every request as an `authorization` header\n  const authLink = setContext((_, { headers }) => {\n    // get the authentication token from local storage if it exists\n    const token = localStorage.getItem(\"id_token\");\n    // return the headers to the context so httpLink can read them\n    return {\n      headers: {\n        ...headers,\n        authorization: token ? `Bearer ${token}` : \"\",\n      },\n    };\n  });\n  \n\nconst client = new ApolloClient({\n    // Set up our client to execute the `authLink` middleware prior to making the request to our GraphQL API\n    link: authLink.concat(httpLink),\n    cache: new InMemoryCache(),\n  });\n\nfunction Backplate() {\n    return (\n    <ApolloProvider client={client}>\n      <Router>\n          <Header />\n            <div className=\"container\">\n\n\n                <Route exact path=\"/\"><Home /></Route>\n\n                <Switch>\n\n                  <Route path=\"/search\"><Search /></Route>\n\n                  <Route path=\"/home\"><Home /></Route>\n\n                  <Route path=\"/blog\"><SingleThought /></Route>\n\n                </Switch>\n          </div>\n        <Footer />\n      </Router>\n    </ApolloProvider>\n  );\n}\n\n\nconst Container = styled.div`\n// position: \"fixed\";\n// background-color:#314131;\n`\n\nconst Backing = styled.div`\n// color:#718161;\n// background-color: rgba(49,65,49,1);\n`\n\nexport default Backplate;","C:\\Users\\stong\\bootcamp\\projects\\i-n-t-e-n-t-s\\client\\src\\utils\\mutations.js",[],"C:\\Users\\stong\\bootcamp\\projects\\i-n-t-e-n-t-s\\client\\src\\pages\\Home.js",[],"C:\\Users\\stong\\bootcamp\\projects\\i-n-t-e-n-t-s\\client\\src\\pages\\Search.js",["97","98","99","100"],"import React, { useState } from \"react\";\nimport Blogs from \"./Blogs\";\nimport axios from \"axios\";\nimport \"./css/search.css\";\nimport styled, { css } from \"styled-components\";\n\nconst Search = () => {\n  const [selection, setSelection] = useState();\n  console.log(selection);\n\n  const [results, setResults] = useState();\n\n  const [showBlog, setShowBlog] = useState(false);\n\n  const [park, setPark] = useState();\n\n  const findParks = async () => {\n    const response = await axios.get(`/api/parks/${selection}`);\n    console.log(\"<<<<LOG FOR REF>>>>> \", response.data.data);\n    setResults(response.data.data);\n  };\n\n  const handleChange = (e) => setSelection(e.target.value);\n\n  const openParkBlog = (parkId) => {\n    setPark(results.find(({ id }) => id === parkId));\n    setShowBlog(true);\n  };\n\n  if (showBlog) {\n    return <Blogs park={park} setShowBlog={setShowBlog} />;\n  }\n\n  return (\n    <main className=\"mainSearch\">\n      <div className=\"searchInput\">\n        <p className=\"question\"></p>\n\n        <select onChange={(e) => handleChange(e)}>\n          <option>choose state</option>\n          <option value=\"AL\">Alabama</option>\n          <option value=\"AK\">Alaska</option>\n          <option value=\"AZ\">Arizona</option>\n          <option value=\"AR\">Arkansas</option>\n          <option value=\"CA\">California</option>\n          <option value=\"CO\">Colorado</option>\n          <option value=\"CT\">Connecticut</option>\n          <option value=\"DE\">Delaware</option>\n          <option value=\"DC\">District Of Columbia</option>\n          <option value=\"FL\">Florida</option>\n          <option value=\"GA\">Georgia</option>\n          <option value=\"HI\">Hawaii</option>\n          <option value=\"ID\">Idaho</option>\n          <option value=\"IL\">Illinois</option>\n          <option value=\"IN\">Indiana</option>\n          <option value=\"IA\">Iowa</option>\n          <option value=\"KS\">Kansas</option>\n          <option value=\"KY\">Kentucky</option>\n          <option value=\"LA\">Louisiana</option>\n          <option value=\"ME\">Maine</option>\n          <option value=\"MD\">Maryland</option>\n          <option value=\"MA\">Massachusetts</option>\n          <option value=\"MI\">Michigan</option>\n          <option value=\"MN\">Minnesota</option>\n          <option value=\"MS\">Mississippi</option>\n          <option value=\"MO\">Missouri</option>\n          <option value=\"MT\">Montana</option>\n          <option value=\"NE\">Nebraska</option>\n          <option value=\"NV\">Nevada</option>\n          <option value=\"NH\">New Hampshire</option>\n          <option value=\"NJ\">New Jersey</option>\n          <option value=\"NM\">New Mexico</option>\n          <option value=\"NY\">New York</option>\n          <option value=\"NC\">North Carolina</option>\n          <option value=\"ND\">North Dakota</option>\n          <option value=\"OH\">Ohio</option>\n          <option value=\"OK\">Oklahoma</option>\n          <option value=\"OR\">Oregon</option>\n          <option value=\"PA\">Pennsylvania</option>\n          <option value=\"RI\">Rhode Island</option>\n          <option value=\"SC\">South Carolina</option>\n          <option value=\"SD\">South Dakota</option>\n          <option value=\"TN\">Tennessee</option>\n          <option value=\"TX\">Texas</option>\n          <option value=\"UT\">Utah</option>\n          <option value=\"VT\">Vermont</option>\n          <option value=\"VA\">Virginia</option>\n          <option value=\"WA\">Washington</option>\n          <option value=\"WV\">West Virginia</option>\n          <option value=\"WI\">Wisconsin</option>\n          <option value=\"WY\">Wyoming</option>\n        </select>\n\n        <button id=\"stateSearch\" onClick={findParks}>\n          SEARCH\n        </button>\n      </div>\n\n      {\n      results ? results.map((park) => (\n            <div className=\"parkCard\">\n              <a class=\"singleCard\" onClick={() => openParkBlog(park.id)}>\n                <div class=\"cardTitle\" key={park.id}>\n                  {park.name}\n                </div>\n                <img class=\"parkImg\" src={park.images[0].url} height=\"200\" />\n                <ul class=\"info\">\n                  <li>\n                    Address: {park.addresses[0].line1} {park.addresses[0].city}{\" \"}\n                    {park.addresses[0].stateCode} {park.addresses[0].postalCode}\n                  </li>\n                  <br />\n                  <li>Latititude: {park.latitude}</li>\n                  <li>Longitude: {park.longitude}</li>\n                </ul>\n              </a>\n            </div>\n\n      )) : null\n      }\n\n    </main>\n  );\n};\n\nexport default Search;\n","C:\\Users\\stong\\bootcamp\\projects\\i-n-t-e-n-t-s\\client\\src\\pages\\Blogs.js",[],"C:\\Users\\stong\\bootcamp\\projects\\i-n-t-e-n-t-s\\client\\src\\pages\\SingleThought.js",[],"C:\\Users\\stong\\bootcamp\\projects\\i-n-t-e-n-t-s\\client\\src\\components\\Header\\index.js",["101","102","103"],"import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./style.css\";\nimport styled, { css } from \"styled-components\";\n\nimport Auth from \"../../utils/auth\";\n\nconst Header = () => {\n  let authData = Auth.getProfile().data; //.username\n  const logout = (event) => {\n    event.preventDefault();\n    Auth.logout();\n  };\n  return (\n    <header>\n\n      <div className=\"headWrapper\">\n        <Link to=\"/\">\n          <h1 className=\"title\">\n            in<b>TENTS</b>\n          </h1>\n        </Link>\n      </div>\n\n      <div className=\"barWrap\">\n        <div className=\"bar\">\n          <Link className=\"navItem\" to=\"/search\">\n            view<b>PARKS</b>\n          </Link>\n          <Link className=\"navItem\" to=\"/blog\">\n            base<b>CAMP</b>\n          </Link>\n          <Link className=\"logOut\" onClick={logout}>\n            log<b>OUT</b>\n          </Link>\n        </div>\n      </div>\n\n    </header>\n  );\n};\n\nexport default Header;\n","C:\\Users\\stong\\bootcamp\\projects\\i-n-t-e-n-t-s\\client\\src\\components\\Footer\\index.js",["104","105"],"import React from 'react';\nimport { useLocation, useHistory } from 'react-router-dom';\n\nconst Footer = () => {\n  const location = useLocation();\n  const history = useHistory();\n  return (\n    <footer className=\"w-100 mt-auto bg-secondary p-4\">\n      <div className=\"container text-center mb-5\">\n        {/* {location.pathname !== '/' && (\n          <button\n            className=\"btn btn-dark mb-3\"\n            onClick={() => history.goBack()}\n          >\n            &larr; Go Back\n          </button>\n        )} */}\n        <h4>\n\n        </h4>\n      </div>\n    </footer>\n  );\n};\n\nexport default Footer;\n","C:\\Users\\stong\\bootcamp\\projects\\i-n-t-e-n-t-s\\client\\src\\utils\\queries.js",[],"C:\\Users\\stong\\bootcamp\\projects\\i-n-t-e-n-t-s\\client\\src\\components\\CommentList\\index.js",[],"C:\\Users\\stong\\bootcamp\\projects\\i-n-t-e-n-t-s\\client\\src\\components\\CommentForm\\index.js",["106"],"import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\nimport \"./style.css\"\nimport { ADD_COMMENT } from '../../utils/mutations';\n\nimport Auth from '../../utils/auth';\n\nconst CommentForm = ({ thoughtId }) => {\n  const [commentText, setCommentText] = useState('');\n  const [characterCount, setCharacterCount] = useState(0);\n\n  const [addComment, { error }] = useMutation(ADD_COMMENT);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      const { data } = await addComment({\n        variables: {\n          thoughtId,\n          commentText,\n          commentAuthor: Auth.getProfile().data.username,\n        },\n      });\n\n      setCommentText('');\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    if (name === 'commentText' && value.length <= 280) {\n      setCommentText(value);\n      setCharacterCount(value.length);\n    }\n  };\n\n  return (\n    <div className=\"card\">\n      <h3>What you doing?</h3>\n\n      {Auth.loggedIn() ? (\n        <>\n          <p\n            className={`m-0 ${\n              characterCount === 280 || error ? 'text-danger' : ''\n            }`}\n          >\n            Character Count: {characterCount}/280\n            {error && <span className=\"ml-2\">{error.message}</span>}\n          </p>\n          <form\n            className=\"flex-row justify-center justify-space-between-md align-center\"\n            onSubmit={handleFormSubmit}\n          >\n            <div className=\"col-12 col-lg-9\">\n              <textarea\n                name=\"commentText\"\n                placeholder=\"Add your comment...\"\n                value={commentText}\n                className=\"form-input w-100\"\n                style={{ lineHeight: '1.5', resize: 'vertical' }}\n                onChange={handleChange}\n              ></textarea>\n            </div>\n\n            <div className=\"postButton\">\n              <button className=\"btn btn-primary btn-block py-3\" type=\"submit\">\n                <h4><b>POST</b>it</h4>\n              </button>\n            </div>\n          </form>\n        </>\n      ) : (\n        <p>\n          You need to be logged in!{' '}\n          <Link to=\"/login\">login</Link> or <Link to=\"/signup\">signup.</Link>\n        </p>\n      )}\n    </div>\n  );\n};\n\nexport default CommentForm;\n","C:\\Users\\stong\\bootcamp\\projects\\i-n-t-e-n-t-s\\client\\src\\components\\ThoughtForm\\index.js",["107"],"import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\n\nimport { ADD_THOUGHT } from '../../utils/mutations';\nimport { QUERY_THOUGHTS } from '../../utils/queries';\n\nimport Auth from '../../utils/auth';\n\nconst ThoughtForm = () => {\n  const [thoughtText, setThoughtText] = useState('');\n\n  const [characterCount, setCharacterCount] = useState(0);\n\n  const [addThought, { error }] = useMutation(ADD_THOUGHT, {\n    update(cache, { data: { addThought } }) {\n      try {\n        const { thoughts } = cache.readQuery({ query: QUERY_THOUGHTS });\n\n        cache.writeQuery({\n          query: QUERY_THOUGHTS,\n          data: { thoughts: [addThought, ...thoughts] },\n        });\n      } catch (e) {\n        console.error(e);\n      }\n    },\n  });\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      const { data } = await addThought({\n        variables: {\n          thoughtText,\n          thoughtAuthor: Auth.getProfile().data.username,\n        },\n      });\n\n      setThoughtText('');\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    if (name === 'thoughtText' && value.length <= 1500) {\n      setThoughtText(value);\n      setCharacterCount(value.length);\n    }\n  };\n\n  return (\n    <div className=\"blogPost\">\n      <h3>What did you think of the park?</h3>\n\n      {Auth.loggedIn() ? (\n        <>\n          <p\n            className={`m-0 ${\n              characterCount === 1500 || error ? 'text-danger' : ''\n            }`}\n          >\n            Character Count: {characterCount}/1500\n          </p>\n          <form\n            className=\"flex-row justify-center justify-space-between-md align-center\"\n            onSubmit={handleFormSubmit}\n          >\n            <div className=\"col-12 col-lg-9\">\n              <textarea\n                name=\"thoughtText\"\n                placeholder=\"Here's a new thought...\"\n                value={thoughtText}\n                style={{ lineHeight: '1.5', resize: 'vertical' }}\n                onChange={handleChange}\n              ></textarea>\n            </div>\n\n            <div className=\"col-12 col-lg-3\">\n              <button className=\"btn btn-primary btn-block py-3\" type=\"submit\">\n                SAY\n              </button>\n            </div>\n            {error && (\n              <div className=\"col-12 my-3 bg-danger text-white p-3\">\n                {error.message}\n              </div>\n            )}\n          </form>\n        </>\n      ) : (\n        <p>\n          You need to be logged in!{' '}\n          <Link to=\"/login\">login</Link> or <Link to=\"/signup\">signup.</Link>\n        </p>\n      )}\n    </div>\n  );\n};\n\nexport default ThoughtForm;\n","C:\\Users\\stong\\bootcamp\\projects\\i-n-t-e-n-t-s\\client\\src\\components\\ThoughtList\\index.js",[],{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","severity":1,"message":"113","line":4,"column":8,"nodeType":"114","messageId":"115","endLine":4,"endColumn":14},{"ruleId":"112","severity":1,"message":"116","line":4,"column":18,"nodeType":"114","messageId":"115","endLine":4,"endColumn":21},{"ruleId":"112","severity":1,"message":"117","line":16,"column":3,"nodeType":"114","messageId":"115","endLine":16,"endColumn":9},{"ruleId":"112","severity":1,"message":"116","line":2,"column":18,"nodeType":"114","messageId":"115","endLine":2,"endColumn":21},{"ruleId":"112","severity":1,"message":"118","line":10,"column":42,"nodeType":"114","messageId":"115","endLine":10,"endColumn":50},{"ruleId":"112","severity":1,"message":"119","line":11,"column":8,"nodeType":"114","messageId":"115","endLine":11,"endColumn":12},{"ruleId":"112","severity":1,"message":"120","line":16,"column":8,"nodeType":"114","messageId":"115","endLine":16,"endColumn":13},{"ruleId":"112","severity":1,"message":"121","line":73,"column":7,"nodeType":"114","messageId":"115","endLine":73,"endColumn":16},{"ruleId":"112","severity":1,"message":"122","line":78,"column":7,"nodeType":"114","messageId":"115","endLine":78,"endColumn":14},{"ruleId":"112","severity":1,"message":"113","line":5,"column":8,"nodeType":"114","messageId":"115","endLine":5,"endColumn":14},{"ruleId":"112","severity":1,"message":"116","line":5,"column":18,"nodeType":"114","messageId":"115","endLine":5,"endColumn":21},{"ruleId":"123","severity":1,"message":"124","line":102,"column":15,"nodeType":"125","endLine":102,"endColumn":75},{"ruleId":"126","severity":1,"message":"127","line":106,"column":17,"nodeType":"125","endLine":106,"endColumn":78},{"ruleId":"112","severity":1,"message":"113","line":4,"column":8,"nodeType":"114","messageId":"115","endLine":4,"endColumn":14},{"ruleId":"112","severity":1,"message":"116","line":4,"column":18,"nodeType":"114","messageId":"115","endLine":4,"endColumn":21},{"ruleId":"112","severity":1,"message":"128","line":9,"column":7,"nodeType":"114","messageId":"115","endLine":9,"endColumn":15},{"ruleId":"112","severity":1,"message":"129","line":5,"column":9,"nodeType":"114","messageId":"115","endLine":5,"endColumn":17},{"ruleId":"112","severity":1,"message":"130","line":6,"column":9,"nodeType":"114","messageId":"115","endLine":6,"endColumn":16},{"ruleId":"112","severity":1,"message":"131","line":19,"column":15,"nodeType":"114","messageId":"115","endLine":19,"endColumn":19},{"ruleId":"112","severity":1,"message":"131","line":34,"column":15,"nodeType":"114","messageId":"115","endLine":34,"endColumn":19},"no-native-reassign",["132"],"no-negated-in-lhs",["133"],"no-unused-vars","'styled' is defined but never used.","Identifier","unusedVar","'css' is defined but never used.","'Switch' is defined but never used.","'Redirect' is defined but never used.","'Auth' is defined but never used.","'Blogs' is defined but never used.","'Container' is assigned a value but never used.","'Backing' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'authData' is assigned a value but never used.","'location' is assigned a value but never used.","'history' is assigned a value but never used.","'data' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]